Resources:
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the ALB from anywhere
      GroupName: ALBSecurityGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  # Allowing HTTP traffic from anywhere (for demonstration purposes)
      Tags:
        - Key: Name
          Value: ALBSecurityGroup
      VpcId: vpc-038bc7ffae7666018 # default VPC

  WebServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access from the ALB security group
      GroupName: WebServerSG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt ALBSecurityGroup.GroupId  # Allowing access from ALB security group
      Tags:
        - Key: Name
          Value: WebServerSG
      VpcId: vpc-038bc7ffae7666018 # default VPC

  ALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
        - subnet-05378861da74c73b9
        - subnet-0cd26f7d34707ff46
        - subnet-015fa4b0010e75ab7
        - subnet-0f6f97a0b4e8c4618
      Scheme: internet-facing
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: '60'
      SecurityGroups:
        - !Ref ALBSecurityGroup  # Associate the ALB with the ALB security group

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: vpc-038bc7ffae7666018 # default VPC

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref LaunchConfiguration
      MinSize: 1
      MaxSize: 2
      DesiredCapacity: 1
      AvailabilityZones:
        - !Select [0, !GetAZs '']
      TargetGroupARNs:
        - !Ref TargetGroup

  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0f409bae3775dc8e5
      InstanceType: t2.micro
      SecurityGroups:
        - !Ref WebServerSG  # Associate the EC2 instances with the WebServerSG security group
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -ex
            sudo su
            yum update -y
            yum install -y httpd git
            systemctl start httpd
            systemctl enable httpd
            git clone https://github.com/abhisran/web_temp.git /var/www/html
            systemctl restart httpd

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref ALB
      Port: 80
      Protocol: HTTP

Outputs:
  LoadBalancerDNSName:
    Description: DNS name for the LoadBalancer
    Value: !GetAtt ALB.DNSName
